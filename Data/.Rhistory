?hist
hist(eduData$Income2005,eduData$Educ)
library(ggplot2)
ggplot2.histogram(data=eduData$Income2005, xName='Education', groupName='education', legendPosition="top")
ggplot(eduData, aes(x=dat, color=catg,fill=catg)) + geom_bar(position="dodge")
ggplot(eduData, aes(x=eduData$Income2005, color=catg,fill=catg)) + geom_bar(position="dodge")
ggplot(eduData, aes(x=eduData$Income2005, color=eduData$Educ,fill=eduData$Educ)) + geom_bar(position="dodge")
str(eduData)
filename = "C:\\Users\\croomb\\OneDrive - BAT\\Desktop\\Personal Training\\SMU\\DS 6371 - Statistical Foundations\\StatisticalSleuthDatasets_2\\StatisticalSleuthDatasets\\CSV\\ex0525.csv"
eduData = read.csv(filename,stringsAsFactors=FALSE)
str(eduData)
eduData$logIncome2005 = log(eduData$Income2005)
str(eduData)
library(ggplot2)
library(agricolae)
eduData = eduData[order(eduData$Educ),]
str(eduData)
Less12Edu = subset(eduData,Educ="<12")
str(Less12Edu)
Less12Edu = subset(eduData,Educ="<12")
Edu12 = subset(eduData,Educ="12")
edu1315 = subset(eduData,Educ="13-15")
edu16 = subset(eduData,Educ="16")
eduGT16 = subset(eduData,Educ=">16")
hist(Edu12$Income2005)
hist()
qqplot(Edu12$Income2005)
qqplot(Edu12$Income2005,Edu12$Educ)
qqplot(Edu12$Educ,Edu12$Income2005)
qqplot(Edu12)
plot(eduData$Educ,eduData$Income2005)
plot(Less12Edu$Educ,Less12Edu$Income2005)
plot(Less12Edu$Educ,Less12Edu$Income2005)
plot(eduData$Educ,eduData$Income2005)
plot(eduData$Educ,eduData$Income2005)
fit = aov(logIncome2005 ~ Edu, data=eduData)
fit = aov(logIncome2005 ~ Educ, data=eduData)
summary(fit)
library(pairwiseCI)
library(multcomp)
fit = aov(logIncome2005 ~ Educ, data=eduData)
summary(fit)
pairwiseCI(logIncome2005 ~ Educ, data=eduData)
gfit = glht(fit,linfct=mcp(Educ="Tukey"))
gfit = glht(fit,linfct=mcp(eduData="Tukey"))
fit = aov(logIncome2005 ~ Educ, data=eduData)
fit
gfit = glht(fit,linfct=mcp(Educ="Tukey"))
gfit = glht(fit,linfct=mcp(Educ = "Tukey"))
eduData = read.csv(filename)
fit = aov(logIncome2005 ~ Educ, data=eduData)
eduData$logIncome2005 = log(eduData$Income2005)
fit = aov(logIncome2005 ~ Educ, data=eduData)
summary(fit)
gfit = glht(fit,linfct=mcp(Educ = "Tukey"))
summary(gfit, test=adjusted(type="none"))
confint(gfit)
eduData$Educ = relevel(eduData$Educ, ref="12")
fit = aov(logIncome2005 ~ Educ, data=eduData)
gfit = glht(fit,linfct=mcp(eduData="Dunnett"))
gfit = glht(fit,linfct=mcp(Educ="Dunnett"))
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
#Setup the environment for working
#WorkingDirPath = "C:/Users/sojha.WVOFFICE.000/Documents/SMU/Summer 2019/Doing Data Science/CaseStudy1_2_2_2"
WorkingDirPath = "C:\\Users\\croomb\\OneDrive - BAT\\Desktop\\Personal Training\\SMU\\DS 6306 - Doing Data Science\\DS6306-MinerLeague-CaseStudies\\CaseStudy1"
setwd(WorkingDirPath)
beerFile = ".\\Data\\Beers.csv"
breweryFile = ".\\Data\\Breweries.csv"
#Read the files into dataframes
beerDF = read.csv(beerFile)
breweryDF = read.csv(breweryFile)
brewerysByState = breweryDF %>% count(State,sort=TRUE)
names(brewerysByState) = c("State", "Count")
print(brewerysByState,n=51)
BeersAndBreweriesDF = merge(x=beerDF,y=breweryDF,by.x="Brewery_id",by.y="Brew_ID")
ABVByState = BeersAndBreweriesDF %>% group_by(Brewery_State) %>% summarise(median=median(ABV,na.rm=TRUE))
names(BeersAndBreweriesDF) = c("Brewery_id","Beer_Name","Beer_ID","ABV","IBU","Beer_Style","Beer_OZ","Brewery_Name","Brewery_City","Brewery_State")
ABVByState = BeersAndBreweriesDF %>% group_by(Brewery_State) %>% summarise(median=median(ABV,na.rm=TRUE))
IBUByState = BeersAndBreweriesDF %>% group_by(Brewery_State) %>% summarise(median=median(IBU,na.rm=TRUE))
names(ABVByState) = c("State","MedianABV")
names(IBUByState) = c("State","MedianIBU")
?write.csv
write.csv(ABVByState,"ABVByState.csv")
write.csv(IBUByState,"IBUByState.csv")
write.csv(ABVByState,"C:\\RAI\\ABVByState.csv")
write.csv(IBUByState,"C:\\RAI\\IBUByState.csv")
bbdata = read.csv('C:\\Users\\croomb\\OneDrive - BAT\\Desktop\Personal Training\\SMU\\DS 6371 - Statistical Foundations\\CourseLectures\\unit8_2\\baseball_data.csv')
bbdata = read.csv('C:\\Users\\croomb\\OneDrive - BAT\\Desktop\\Personal Training\\SMU\\DS 6371 - Statistical Foundations\\CourseLectures\\unit8_2\\baseball_data.csv')
str(bbdata)
head(bbdata,10)
plot(bbdata$Payroll,bbdata$Wins)
corr(bbdata)
cor(bbdata)
cor.test(bbdata$Wins,bbdata$Payroll)
cor.test(bbdata$Payroll,bbdata$Wins)
bbdata
bbdata2 = bbdata[-c(29),]
bbdata2
plot(bbdata2$Payroll,bbdata2$Wins)
cor.test(bbdata2$Wins,bbdata2$Payroll)
df = read.csv("C:\\Users\\croomb\\OneDrive - BAT\\Desktop\\Personal Training\\SMU\\DS 6371 - Statistical Foundations\\CourseLectures\\unit9_2\\TEST DATA.csv")
df
scoreslm=lm(df$math~df$science, data=df)
summary(scoreslm)
confint(scoreslm)
df = read.csv("C:\\Users\\croomb\\OneDrive - BAT\\Desktop\\Personal Training\\SMU\\DS 6371 - Statistical Foundations\\CourseLectures\\unit9_2\\Baseball_data.csv")
head(df)
scoreslm = lm(df$Wins~df$Payroll, data=df)
summary(scoreslm)
confint(scoreslm)
df = read.csv("C:\\Users\\croomb\\OneDrive - BAT\\Desktop\\Personal Training\\SMU\\DS 6371 - Statistical Foundations\\CourseLectures\\unit10_2\\Male Display Data Set.csv")
library(ggplot2)
df
ggplot(df, aes(x=mass, y=tcell)) + geom_point(color='#2980B9', size=4) + geom_smooth(method=lm, color='#2C3E50')
ggplot(df, aes(x=df$mass, y=df$tcell)) + geom_point(color='#2980B9', size=4) + geom_smooth(method=lm, color='#2C3E50')
ggplot(df, aes(x=df$Mass, y=df$Tcell)) + geom_point(color='#2980B9', size=4) + geom_smooth(method=lm, color='#2C3E50')
ggplot(df, aes(x=df$Mass, y=df$Tcell)) + geom_point(color='#2980B9', size=4) + geom_smooth(method=lm, color='#2C3E50') + geom_smooth(level=0.99)
ggplot(df, aes(x=df$Mass, y=df$Tcell)) + geom_point(color='#2980B9', size=4) + geom_smooth(method=lm, color='#2C3E50', level=0.99)
library(ggplot2)
df = read.csv("C:\\Users\\croomb\\OneDrive - BAT\\Desktop\\Personal Training\\SMU\\DS 6371 - Statistical Foundations\\CourseLectures\\unit10_2\\Male Display Data Set.csv")
model1 = lm(df$TCell ~ df$Mass, data=df)
df
model1 = lm(df$TCell ~ df$Mass, data=df)
model1 = lm(df$TCell ~ df$Mass)
model1 = lm(df$Tcell ~ df$Mass, data=df)
temp_var = predict(model1,interval="prediction", level=0.99)
new_df = cbind(df, temp_vat)
new_df = cbind(df, temp_var)
ggplot(new_df, aes(x=new_df$Mass, y=new_df$Tcell)) + geom_point(color='#2980B9', size=4) + geom_smooth(method=lm, color='#2C3E50', level=0.99) + geom_lint(aes(y=new_df$lwr), color="red", linetype="dashed") + geom_lint(aes(y=new_df$upr), color="red", linetype="dashed")
ggplot(new_df, aes(x=new_df$Mass, y=new_df$Tcell)) + geom_point(color='#2980B9', size=4) + geom_smooth(method=lm, color='#2C3E50', level=0.99) + geom_line(aes(y=new_df$lwr), color="red", linetype="dashed") + geom_line(aes(y=new_df$upr), color="red", linetype="dashed")
summary(model1)
abs(qt(0.01/2, 19))
df = read.csv("C:\\Users\\croomb\\OneDrive - BAT\\Desktop\\Personal Training\\SMU\\DS 6371 - Statistical Foundations\\CourseLectures\\unit10_2\\Male Display Data Set.csv")
model1 = lm(df$Tcell ~ df$Mass, data=df)
newpoint = data.frame(Mass=4.5,Tcell=NA)
predict(model1,newpoint,interval="confidence",level=0.99)
model1 = lm(df$Tcell ~ df$Mass, data=df)
> newpoint = data.frame(Mass=4.5,Tcell=NA)
model1 = lm(df$Tcell ~ df$Mass, data=df)newpoint = data.frame(Mass=4.5,Tcell=NA)
model1 = lm(df$Tcell ~ df$Mass, data=df)newpoint = data.frame(Mass=4.5,Tcell=NA)
model1 = lm(df$Tcell ~ df$Mass, data=df)
newpoint = data.frame(Mass=4.5,Tcell=NA)
model1
summary(model1)
model1.lm
model1
df = read.csv("C:\\Users\\croomb\\OneDrive - BAT\\Desktop\\Personal Training\\SMU\\DS 6371 - Statistical Foundations\\CourseLectures\\unit10_2\\Male Display Data Set.csv")
df
model1.lm = lm(df$Tcell ~ df$Mass, data=df)
newpoint = data.frame(Tcell=NA,Mass=4.5)
predict(model1.lm,newpoint,interval="confidence",limit=0.99)
newpoint = data.frame(Tcell=NA,Mass=4.5)
newpoint
df
newpoint = data.frame(Mass=4.5, Tcell=NA)
predict(model1.lm,newpoint,interval="confidence",limit=0.99)
model1 = lm(Tcell ~ Mass, data=df)
newpoint = data.frame(Mass=4.5, Tcell=NA)
predict(model1.lm,newpoint,interval="confidence",limit=0.99)
model1 = lm(Tcell ~ Mass, data=df)
newpoint = data.frame(Mass=4.5, Tcell=NA)
predict(model1,newpoint,interval="confidence",limit=0.99)
predict(model1,newpoint,interval="prediction",limit=0.99)
install.packages("investr")
library(investr)
calibrate(model1,y0 = 0.3,interval="inverstion",mean.response=TRUE,level=0.99)
calibrate(model1,y0 = 0.3,interval="inversion",mean.response=TRUE,level=0.99)
calibrate(model1,y0 = 0.3,interval="inversion",level=0.99)
df = read.csv("C:\\Users\\croomb\\OneDrive - BAT\\Desktop\\Personal Training\\SMU\\DS 6371 - Statistical Foundations\\CourseLectures\\unit10_2\\Male Display Data Set.csv")
model1.lm = lm(Tcell ~ Mass, data=df)
model1.res = resid(model1.lm)
plot(df$Tcell,model1.rm,ylab="Residuals",xlab="TCell")
plot(df$Tcell,model1.res,ylab="Residuals",xlab="TCell")
abline(0,0)
h=hist(model1.res, breaks=10, col="red", xlab = "Residuals")
xfit=seq(min(model1.res), max(model1.res), length=40)
yfit=dnorm(xfit, mean=mean(model1.res), sd=sd(model1.res))
yfit = yfit*diff(h$mids[1:1])*length(model1.res)
lines(xfit,yfit,col="blue",lwd=2_
lines(xfit,yfit,col="blue",lwd=2)
xfit=seq(min(model1.res), max(model1.res), length=length(model1.res))
lines(xfit,yfit,col="blue",lwd=2)
length(xfit)
length(yfit)
h=hist(model1.res, breaks=10, col="red", xlab = "Residuals")
xfit=seq(min(model1.res), max(model1.res), length=40)
yfit=dnorm(xfit, mean=mean(model1.res), sd=sd(model1.res))
yfit = yfit*diff(h$mids[1:2])*length(model1.res)
lines(xfit,yfit,col="blue",lwd=2)
df = read.csv("C:\\RAI\\BarbeeBungeeData.csv")
df = read.csv("C:\\RAI\\BarbeeBungeeData.csv")
df = read.csv("C:\\RAI\\BarbeeBungeeData.csv")
df = read.csv("C:\\RAI\\BarbeeBungeeData.csv")
dd
df
names(df) = c("Bands", "Distance")
df
ggplot(df, aes(x=Bands, y=Distance)) + geom_point()
library(ggplot2)
ggplot(df, aes(x=Bands, y=Distance)) + geom_point()
ggplot(df, aes(x=Bands, y=Distance), xlab="Rubber Bands") + geom_point()
ggplot(df, aes(x=Bands, y=Distance)) + geom_point()
qt(0.95,8)
summary(df)
t.test(Distance ~ Bands, data=df, conf.level=0.95, var.equal=TRUE)
t.test(Distance ~ Bands, data=df, conf.level=0.95)
t.test(df$Distance ~ df$Bands, data=df, conf.level=0.95)
cor.test(df$Distance, df$Bands)
lm(Distance, Bands, data=df)
lm(df$Distance, df$Bands, data=df)
lm(Distance, Bands, data=df)
lm(Distance ~ Bands, data=df)
bandslm = lm(Distance ~ Bands, data=df)
confint(bandslm)
df = read.csv("C:\\RAI\\BarbeeBungeeData.csv")
cor.test(df$Distance, df$Bands)
names(df) = c("Bands", "Distance")
cor.test(df$Distance, df$Bands)
bandslm = lm(Distance ~ Bands, data=df)
summary(bandslm)
lm(Distance ~ Bands, data=df)
confint(bandslm)
ggplot(df, aes(x=Bands, y=Distance)) + geom_point()
ggplot(df, aes(x=Bands, y=Distance)) + geom_point() + geom_Smooth(method=lm, se=false, fullrange=fales)
ggplot(df, aes(x=Bands, y=Distance)) + geom_point() + geom_Smooth(method=lm, se=false, fullrange=FALSE)
ggplot(df, aes(x=Bands, y=Distance)) + geom_point() + geom_smooth(method=lm, se=false, fullrange=FALSE)i
ggplot(df, aes(x=Bands, y=Distance)) + geom_point() + geom_smooth(method=lm, se=false, fullrange=FALSE)
ggplot(df, aes(x=Bands, y=Distance)) + geom_point() + geom_smooth(method=lm, se=FALSE, fullrange=FALSE)
library(ggplot2)
df = read.csv("C:\\Users\\croomb\\OneDrive - BAT\\Desktop\\Personal Training\\SMU\\DS 6371 - Statistical Foundations\\CourseLectures\\unit11_2\\Autism Data Prob 29.csv")
head(df)
plot(df$Year,df$Prevalence,xlab="Year",ylab="Prevalence")
abline(lm(df$Prevalence~df$Year), col="red") # regression line (y~x)
model1 = lm(Prevalence ~ Year, data=df)
temp_var = predict(model1,interval="prediction", level=0.99)
new_df = cbind(df, temp_var)
ggplot(new_df, aes(x=new_df$Year, y=new_df$Prevalence)) + geom_point(color='#2980B9', size=4) + geom_smooth(method=lm, color='#2C3E50', level=0.99) + geom_line(aes(y=new_df$lwr), color="red", linetype="dashed") + geom_line(aes(y=new_df$upr), color="red", linetype="dashed")
'Generic Scatter Plot'
plot(df$Year,df$Prevalence,xlab="Year",ylab="Prevalence")
abline(lm(df$Prevalence~df$Year), col="red") # regression line (y~x)
'Scatterplot with CIs and PIs - Original Data'
model1.lm = lm(Prevalence ~ Year, data=df)
model1.res = resdi(model1.lm)
temp_var = predict(model1.lm,interval="prediction", level=0.99)
new_df = cbind(df, temp_var)
ggplot(new_df, aes(x=new_df$Year, y=new_df$Prevalence)) + geom_point(color='#2980B9', size=4) + geom_smooth(method=lm, color='#2C3E50', level=0.99) + geom_line(aes(y=new_df$lwr), color="red", linetype="dashed") + geom_line(aes(y=new_df$upr), color="red", linetype="dashed")
'Residual Plot'
plot(new_df$Prevalence, model1.res, ylab="Residuals", xlab="Year")
abline(0, 0
plot(new_df$Prevalence, model1.res, ylab="Residuals", xlab="Year")
plot(df, model1.res, ylab="Residuals", xlab="Year")
plot(df$Year, model1.res, ylab="Residuals", xlab="Year")
plot(new_df$Year, model1.res, ylab="Residuals", xlab="Year")
model1.res
new_df$Year
summary(model1)
model1.lm = lm(Prevalence ~ Year, data=df)
model1.res = resid(model1.lm)
temp_var = predict(model1.lm,interval="prediction", level=0.95)
new_df = cbind(df, temp_var)
model1
summary(model1)
model1.res
plot(new_df$Year, model1.res, ylab="Residuals", xlab="Year")
abline(0, 0)
plot(new_df$Year, model1.res, ylab="Residuals", xlab="Year")
plot(new_df$Year, model1.res, ylab="Residuals", xlab="Year")
abline(0,0)
ggplot(new_df, aes(x=new_df$Year, y=new_df$Prevalence)) + geom_point(color='#2980B9', size=4) + geom_smooth(method=lm, color='#2C3E50', level=0.99) + geom_line(aes(y=new_df$lwr), color="red", linetype="dashed") + geom_line(aes(y=new_df$upr), color="red", linetype="dashed")
hist(model1.res)
h<-hist(model1.res, breaks=10, col="red", xlab="Residuals",
main="Histogram with Normal Curve")
xfit<-seq(min(x),max(x),length=40)
yfit<-dnorm(xfit,mean=mean(x),sd=sd(x))
yfit <- yfit*diff(h$mids[1:2])*length(x)
lines(xfit, yfit, col="blue", lwd=2)
x = model1.res
h<-hist(x, breaks=10, col="red", xlab="Residuals",
main="Histogram with Normal Curve")
xfit<-seq(min(x),max(x),length=40)
yfit<-dnorm(xfit,mean=mean(x),sd=sd(x))
yfit <- yfit*diff(h$mids[1:2])*length(x)
lines(xfit, yfit, col="blue", lwd=2)
x = model1.res
h<-hist(x, breaks=5, col="red", xlab="Residuals",
main="Histogram with Normal Curve")
xfit<-seq(min(x),max(x),length=40)
yfit<-dnorm(xfit,mean=mean(x),sd=sd(x))
yfit <- yfit*diff(h$mids[1:2])*length(x)
lines(xfit, yfit, col="blue", lwd=2)
ggplot(new_df, aes(x=new_df$Year, y=new_df$Prevalence)) + geom_point(color='#2980B9', size=4) + geom_smooth(method=lm, color='#2C3E50', level=0.95) + geom_line(aes(y=new_df$lwr), color="red", linetype="dashed") + geom_line(aes(y=new_df$upr), color="red", linetype="dashed")
summary(model1.lm)
qnorm(model1.res)
model1.res
qqplot(model1.res)
library(ggplot2)
df = read.csv("C:\\Users\\croomb\\OneDrive - BAT\\Desktop\\Personal Training\\SMU\\DS 6371 - Statistical Foundations\\CourseLectures\\unit11_2\\Autism Data Prob 29.csv")
df$logPrev = log(df$Prevalence)
model1.lm = lm(Prevalence ~ Year, data=df)
model1.res = resid(model1.lm)
model1.predict = predict(model1.lm,interval="prediction")
plot(df$Year,df$Prevalence,xlab="Year",ylab="Prevalence")
abline(lm(df$Prevalence~df$Year), col="red")
ggplot(df, aes(x=df$Year, y=df$Prevalence)) + geom_point(color='#2980B9', size=4) + geom_smooth(method=lm, color='#2C3E50', level=0.95) + geom_line(aes(y=model1.predict$lwr), color="red", linetype="dashed") + geom_line(aes(y=model1.predict$upr), color="red", linetype="dashed")
model1.predict$
model1.predict
model1.predict
model1.predict$fit
predict$fit
model1.predict
model1.predict.fit[1]
model1.predict.fit
model1.predict
model1.predict[fit]
model1.predict[1]
model1.predict[2]
model1.predict[lwr,]
model1.predict[,2]
ggplot(df, aes(x=df$Year, y=df$Prevalence)) + geom_point(color='#2980B9', size=4) + geom_smooth(method=lm, color='#2C3E50', level=0.95) + geom_line(aes(y=model1.predict[,2]), color="red", linetype="dashed") + geom_line(aes(y=model1.predict[,3]), color="red", linetype="dashed")
model1.loglm = lm(logPrev ~ Year, data=df)
model1.logres = resid(model1.lm)
model1.logpredict = predict(model1.lm,interval="prediction")
ggplot(df, aes(x=df$Year, y=df$logPrev)) + geom_point(color='#2980B9', size=4) + geom_smooth(method=lm, color='#2C3E50', level=0.95) + geom_line(aes(y=model1.logpredict[,2]), color="red", linetype="dashed") + geom_line(aes(y=model1.logpredict[,3]), color="red", linetype="dashed")
'Residual Plot'
plot(df$Prevalence, model1.res, ylab="Residuals", xlab="Year")
abline(0, 0)
'Residual Plot'
plot(df$logPrev, model1.res, ylab="Residuals", xlab="Year")
abline(0, 0)
plot(df$logPrev, model1.res, ylab="Residuals", xlab="Year")
'Histogram of residuals'
x = model1.logres
h<-hist(x, breaks=5, col="red", xlab="Residuals",
main="Histogram with Normal Curve")
xfit<-seq(min(x),max(x),length=40)
yfit<-dnorm(xfit,mean=mean(x),sd=sd(x))
yfit <- yfit*diff(h$mids[1:2])*length(x)
lines(xfit, yfit, col="blue", lwd=2)
library(ggplot2)
df = read.csv("C:\\Users\\croomb\\OneDrive - BAT\\Desktop\\Personal Training\\SMU\\DS 6371 - Statistical Foundations\\CourseLectures\\unit12_2\\Brain.csv")
summary(df)
ggplot(df,aes(x=Gestation,Y=Body),colour=True)) + geom_point() + geom_smooth(method="lm")
ggplot(df,aes(x=Gestation,Y=Body),colour=True) + geom_point() + geom_smooth(method="lm")
ggplot(df,aes(x=X,y=Y),colour=True) + geom_point() + geom_smooth(method="lm")
ggplot(df,aes(x=df$Brain,y=df$Gestation),colour=True) + geom_point() + geom_smooth(method="lm")
ggplot(df,aes(x=df$Brain,y=df$Gestation),colour=Type) + geom_point() + geom_smooth(method="lm")
pairs(df[c("Brain","Body","Gestation","Litter")])
df$logBrain = log(df$brain)
df$logBody = log(df$Body)
df$logGestation = log(df$Gestation)
df$logLitter = log(df$Litter)
df$logBrain = log(df$Brain)
pairs(df[c("logBrain","logBody","logGestation",l"logLitter")])
pairs(df[c("logBrain","logBody","logGestation","logLitter")])
lm1 = lm(df$logBrain ~ df$logBody + df$logGestation + df$logLitter, data=df)
summary(lm1)
plot(df$logBrain ~ df$logBody)
plot(lm1, which=1)
plot(lm1)
plot(lm1)
plot(lm1, which=1
)
plot(lm1, which=2)
plot(lm1)
histogram(lm1)
hist(residuals(lm1))
studres(lm1)
plot(resid(races.lm), rstudent(races.lm), pch=23, bg='blue', cex=3)
plot(resid(lm1), rstudent(lm1), pch=23, bg='blue', cex=3)
plot(residuals(lm1), rstudent(lm1), pch=23, bg='blue', cex=3)
summary(lm1)
lm1$residuals^2
mean(lm1$residuals^2)
library(ggplot2)
df = read.csv("C:\\Users\\croomb\\OneDrive - BAT\\Desktop\\Personal Training\\SMU\\DS 6371 - Statistical Foundations\\CourseLectures\\unit12_2\\crab17.csv")
summary(df)
if (df$Species == "Cancer productus") {
df$CrabType = "C"
} else if (df$Species == "Hemigrapsus nudus") {
df$CrabType = "H"
} else {
df$CrabType = "L"
}
df
if (df$Species == "Cancer productus") {
df$CrabType = "C"
}
df
if (df$Species == "Hemigrapsus nudus") {
df$CrabType = "H"
}
if (df$Species == "Lophopanopeus bellus") {
df$CrabType = "L"
}
df
df$Species[1,1]
df$Species[1]
df$Species[,1]
df$Species[1]
summary(df)
df
df = read.csv("C:\\Users\\croomb\\OneDrive - BAT\\Desktop\\Personal Training\\SMU\\DS 6371 - Statistical Foundations\\CourseLectures\\unit12_2\\crab17BC.csv")
df
ggplot(df,aes(x=Height, y=Force, colour=CrabType)) + geom_plot() + geom_Smooth(method="lm")
ggplot(df,aes(x=Height, y=Force, colour=CrabType)) + geom_point() + geom_Smooth(method="lm")
ggplot(df,aes(x=Height, y=Force, colour=CrabType)) + geom_point() + geom_smooth(method="lm")
df = read.csv("C:\\Users\\croomb\\OneDrive - BAT\\Desktop\\Personal Training\\SMU\\DS 6371 - Statistical Foundations\\CourseLectures\\unit12_2\\crab17BC.csv")
summary(df)
lm1 = lm(df$Force ~ df$Height + df$CatVar1 + df$CatVar2)
summary(lm1)
library(tidyverse)
library(plyr)
workingDirFilePath = "C:\\Users\\croomb\\OneDrive - BAT\\Desktop\\Personal Training\\SMU\\DS 6306 - Doing Data Science\\DS6306-MinerLeague-CaseStudy2\\DS6306-MinerLeague-CaseStudy2\\Data\\"
sourceFile = "CaseStudy2-data-csv.csv"
setwd(workingDirFilePath)
#Load data from the file. Ensure strings don't come in as factors
empDF = read.csv(sourceFile,stringsAsFactors = FALSE)
summary(is.na(empDF))
aggregate(WorkLifeBalance ~ JobRole, data=empDF,mean)
aggregate(WorkLifeBalance ~ JobRole + Gender, data=empDF,mean)
aggregate(YearsAtCompany ~ JobRole, data=empDF, mean)
aggregate(YearsAtCompany ~ JobRole + Gender, data=empDF, mean)
aggregate(YearsInCurrentRole ~ JobRole,data=empDF, mean)
aggregate(YearsInCurrentRole ~ JobRole + Gender,data=empDF, mean)
aggregate(YearsWithCurrManager ~ JobRole, data=empDF, mean)
aggregate(YearsWithCurrManager ~ JobRole + Gender, data=empDF, mean)
aggregate(Age ~ JobRole, data=empDF, mean)
aggregate(Age ~ JobRole + Gender, data=empDF, mean)
aggregate(BusinessTravel ~ JobRole, data=empDF, mean)
aggregate(YearsSinceLastPromotion ~ JobRole, data=empDF, mean)
aggregate(YearsSinceLastPromotion ~ JobRole + Gender, data=empDF, mean)
aggregate(WorkLifeBalance ~ JobRole + Gender, data=empDF,median)
aggregate(PerformanceRating ~ JobRole, data=empDF, median)
aggregate(PerformanceRating ~ JobRole + Gender, data=empDF, median)
aggregate(NumCompaniesWorked ~ JobRole + Gender, data=empDF, mean)
aggregate(JobInvolvement ~ JobRole, data=empDF, median)
aggregate(JobInvolvement ~ JobRole + Gender, data=empDF, median)
aggregate(RelationshipSatisfaction ~ JobRole, data=empDF, median)
aggregate(RelationshipSatisfaction ~ JobRole + Gender, data=empDF, median)
aggregate(RelationshipSatisfaction ~ JobRole + MaritalStatus, data=empDF, median)
aggregate(RelationshipSatisfaction ~ JobRole + MaritalStatus + Gender, data=empDF, median)
library(MASS)
full.model = lm(Attrition ~., data=empDF)
base.mod = lm(Attrition ~1, data=empDF)
summary(empDF)
summary(is.na(empDF))
count(is.na(empDF))
empDF_raw = empDF
empDF_raw
empDF = select(empDF_raw, -c(Over18,EmployeeCount,StandardHours,EmployeeNumber))
library(dplyr)
empDF = select(empDF_raw, -c(Over18,EmployeeCount,StandardHours,EmployeeNumber))
empDF = select(empDF_raw, -c("Over18","EmployeeCount","StandardHours","EmployeeNumber"))
empDF = select(empDF_raw, -c(Over18))
select(empDF_raw)
empDF = dplyr::select(empDF_raw, -c(Over18))
empDF = dplyr::select(empDF_raw, -c("Over18","EmployeeCount","StandardHours","EmployeeNumber"))
empDF
ggplot(empDF) + geom_histogram(aes(Age), binwidth=5)
ggplot(empDF) + geom_histogram(aes(Age), binwidth=5, fill="green", col="black")
empDF %>%
group_by(Gender) %>%
summarise(counts = n()) %>%
ggplot(aes(x = as.factor(Gender), y = counts)) + geom_bar(stat = 'identity', fill = "coral1") + ggtitle("Gender") +geom_text(aes(label=counts), size = 2.5, position=position_dodge(width=0.2), vjust=-0.25) + theme(plot.title = element_text(size =10),axis.text.x = element_text(size =7,angle = 45, hjust = 1),axis.title.x=element_blank()) + scale_y_continuous(limits = c(0, 900))
empDF %>%
group_by(Gender) %>%
summarise(counts = n()) %>%
ggplot(aes(x = Gender, y = counts)) + geom_bar(stat = 'identity', fill = "coral1") + ggtitle("Gender") +geom_text(aes(label=counts), size = 2.5, position=position_dodge(width=0.2), vjust=-0.25) + theme(plot.title = element_text(size =10),axis.text.x = element_text(size =7,angle = 45, hjust = 1),axis.title.x=element_blank()) + scale_y_continuous(limits = c(0, 900))
empDF %>%
group_by(Gender) %>%
dplyt::summarise(counts = n()) %>%
ggplot(aes(x = as.factor(Gender), y = counts)) + geom_bar(stat = 'identity', fill = "coral1") + ggtitle("Gender") +geom_text(aes(label=counts), size = 2.5, position=position_dodge(width=0.2), vjust=-0.25) + theme(plot.title = element_text(size =10),axis.text.x = element_text(size =7,angle = 45, hjust = 1),axis.title.x=element_blank()) + scale_y_continuous(limits = c(0, 900))
empDF %>%
group_by(Gender) %>%
dplyr::summarise(counts = n()) %>%
ggplot(aes(x = as.factor(Gender), y = counts)) + geom_bar(stat = 'identity', fill = "coral1") + ggtitle("Gender") +geom_text(aes(label=counts), size = 2.5, position=position_dodge(width=0.2), vjust=-0.25) + theme(plot.title = element_text(size =10),axis.text.x = element_text(size =7,angle = 45, hjust = 1),axis.title.x=element_blank()) + scale_y_continuous(limits = c(0, 900))
empDF %>%
group_by(EducationField) %>%
dplyr::summarise(counts = n()) %>%
ggplot(aes(x = as.factor(EducationField), y = counts)) + geom_bar(stat = 'identity', fill = "coral1") + ggtitle("Education Field") +geom_text(aes(label=counts), size = 2.5, position=position_dodge(width=0.2), vjust=-0.25) + theme(plot.title = element_text(size =10),axis.text.x = element_text(size =7,angle = 45, hjust = 1),axis.title.x=element_blank()) + scale_y_continuous(limits = c(0, 650))
empDF %>%
group_by(Education) %>%
dplyr::summarise(counts = n()) %>%
ggplot(aes(x = as.factor(Education), y = counts)) + geom_bar(stat = 'identity', fill = "coral1") + ggtitle("Education") +geom_text(aes(label=counts), size = 2.5, position=position_dodge(width=0.2), vjust=-0.25) + theme(plot.title = element_text(size =10),axis.text.x = element_text(size =7,angle = 45, hjust = 1),axis.title.x=element_blank()) + scale_y_continuous(limits = c(0, 650))
empDF %>%
ggplot(aes(x = Age, fill = Attrition)) + geom_point() + ggtitle("Age") + theme(plot.title = element_text(size =10),axis.text.x = element_text(size =7,angle = 45, hjust = 1),axis.title.x=element_blank())
empDF %>%
ggplot(aes(x = Age, y=Attrition fill = Attrition)) + geom_point() + ggtitle("Age") + theme(plot.title = element_text(size =10),axis.text.x = element_text(size =7,angle = 45, hjust = 1),axis.title.x=element_blank())
empDF %>%
ggplot(aes(x = Age, y=Attrition, fill = Attrition)) + geom_point() + ggtitle("Age") + theme(plot.title = element_text(size =10),axis.text.x = element_text(size =7,angle = 45, hjust = 1),axis.title.x=element_blank())
install.packages("corrplot")
library(corrplot)
empCorr = cor(empDF)
str(mtcars)
str(empDF)
emp_cor<- empDF
for(i in 1:ncol(emp_cor)){
emp_cor[,i]<- as.integer(emp_cor[,i])
}
corrplot(cor(emp_cor))
emp_cor<- empDF_raw
for(i in 1:ncol(emp_cor)){
emp_cor[,i]<- as.integer(emp_cor[,i])
}
corrplot(cor(emp_cor))
emp_cor<- empDF
for(i in 1:ncol(emp_cor)){
emp_cor[,i]<- as.integer(emp_cor[,i])
}
corrplot(cor(emp_cor))
